import React, { useState } from 'react';
import { Calendar, theme } from 'antd';

const onPanelChange = (value, mode) => {
  console.log(value.format('YYYY-MM-DD'), mode);
};

const CalendarComponent = () => {
  const { token } = theme.useToken();
  const [selectedDate, setSelectedDate] = useState('');
  const [workSchedule, setWorkSchedule] = useState('Horario de trabajo: 9:00 AM - 5:00 PM');

  const dateInfoMap = {
    '2023-04-11': 'D√≠a Internacional del Parkinsonü©∫üíõüß°',
    '2023-11-05': 'D√≠a Internacional de las Personas Cuidadorasüë®üèª‚Äç‚öïÔ∏èüë©üèª‚Äç‚öïÔ∏è',
    '2023-05-12': 'D√≠a Internacional de la Enfermer√≠aüë©üèæ‚Äç‚öïÔ∏èüë®üèΩ‚Äç‚öïÔ∏è',
    '2023-07-26': 'D√≠a del adulto Mayorüë¥üèºüßìüèºüëµüèºüë©üèº‚Äçü¶∞üë¥üèæüëµüèæ',
    '2023-09-15': 'D√≠a del Geriatraüßë‚Äç‚öïÔ∏èü©∫üë¥',
    '2023-11-29': 'D√≠a Mundial del Neur√≥logoüßë‚Äç‚öïÔ∏èü©∫',
    '2023-01-01': 'A√±o Nuevoüéáü•≥',
    '2023-05-01': 'D√≠a Internacional del Trabajadorüë∑üë∑üèΩ‚Äç‚ôÄÔ∏èüë®üèΩ‚Äç‚öïÔ∏èüë©üèª‚Äçüè´',
    '2023-09-08': 'D√≠a de Extremadura üíöü§çüñ§',
    '2023-10-27': 'D√≠a de la terapia ocupacional üôÜüèª‚Äç‚ôÇÔ∏èüíÜüèª‚Äç‚ôÄÔ∏èüßòüèª',
    '2023-10-10': 'D√≠a Mundial de la Salud Mental üß†ü´Çüó£Ô∏è',

    // Agrega el resto de las fechas...
  };

  const handleDateSelect = (date) => {
    setSelectedDate(date.format('YYYY-MM-DD'));

    // Puedes ajustar el horario de trabajo seg√∫n la fecha seleccionada
    // Aqu√≠ es solo un ejemplo fijo, puedes personalizarlo seg√∫n tus necesidades.
    setWorkSchedule('Horario de trabajo: 9:00 AM - 5:00 PM');
  };

  const dateCellRender = (currentDate) => {
    const dateToHighlight = [
      '2023-04-11',
      '2023-11-05',
      '2023-05-12',
      '2023-07-26',
      '2023-09-15',
      '2023-11-29',
      '2023-01-01',
      '2023-05-01',
      '2023-09-08',
      '2023-10-27',
      '2023-10-10',
      
    ];

    const highlightStyle = {
      border: '4px solid yellow',
      borderRadius: '100%',
      height: '18px',
      width: '18px',
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
    };

    const isDateToHighlight = dateToHighlight.includes(currentDate.format('YYYY-MM-DD'));

    return isDateToHighlight ? <div style={highlightStyle} /> : null;
  };

  const containerStyle = {
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    marginLeft: '500px',
    marginTop: '60px',  // Ajusta seg√∫n sea necesario
  };

  const calendarWrapperStyle = {
    width: '300px',
    border: `1px solid ${token.colorBorderSecondary}`,
    borderRadius: token.borderRadiusLG,
    padding: '20px',
    backgroundColor: 'lightblue',
    marginTop: '200px',  // Ajusta seg√∫n sea necesario
    
  };

  const infoStyle = {
    padding: '15px',
    backgroundColor: 'lightblue',
    width: '450px',
    textAlign: 'center',
    marginTop: '30px',  // Ajusta seg√∫n sea necesario
  };

  const scheduleStyle = {
    padding: '15px',
    backgroundColor: 'lightgreen',
    width: '400px',
    textAlign: 'center',
    marginLeft:'25px',
    marginTop: '12px',
  };

  return (
    <div style={containerStyle}>
      <div style={calendarWrapperStyle}>
        <Calendar
          fullscreen={false}
          onPanelChange={onPanelChange}
          onSelect={handleDateSelect}
          dateCellRender={dateCellRender}
        />
      </div>
      <div>
        <div style={infoStyle}>
          {dateInfoMap[selectedDate] ? (
            <p style={{ fontSize: '18px' }}>{dateInfoMap[selectedDate]}</p>
          ) : (
            <p style={{ fontSize: '18px',color: '#767A82'}}>Selecciona una fecha para ver informaci√≥n</p>
          )}
        </div>
        <div style={scheduleStyle}>
          <p style={{ fontSize: '18px' }}>{workSchedule}</p>
        </div>
      </div>
    </div>
  );
};

export default CalendarComponent;

